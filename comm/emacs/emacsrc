;; work around for emacs 24.5 open slow
(setq tramp-default-method "ssh")
(setq tramp-ssh-controlmaster-options "-o ControlMaster=auto -o ControlPath='tramp.%%C' -o ControlPersist=no")
;; el-get
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(unless (require 'el-get nil 'noerror)
    (with-current-buffer
    (url-retrieve-synchronously
     "https://raw.githubusercontent.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")

;; Simple package names
(el-get-bundle yasnippet)
(el-get-bundle color-moccur)
(el-get-bundle markdown-mode)
;; clang complete
(el-get-bundle company-mode
    (add-hook 'after-init-hook 'global-company-mode))

;; powerfull complete
(el-get-bundle helm
    (global-set-key (kbd "M-X") 'helm-M-x)
    (global-set-key (kbd "C-x C-f") 'helm-find-files)
    (global-set-key (kbd "C-x C-b") 'helm-buffers-list)
    (helm-mode 1))

;; Locally defined recipe
(el-get-bundle yaicomplete
  :url "https://github.com/tarao/elisp.git"
  :features yaicomplete)

(el-get-bundle neotree
    (global-set-key [f2] 'neotree-toggle))

;; project manager
(el-get-bundle projectile
    (projectile-global-mode 1)
    ;; auto switch neotree root when swith project
    (setq projectile-switch-project-action 'neotree-projectile-action))

;; save history.
;; (el-get-bundle session
;;    (add-hook 'after-init-hook 'session-initialize)
;;    (add-to-list 'session-globals-exclude 'org-mark-ring)))

;; With initialization code
(el-get-bundle zenburn-theme
  :url "https://raw.githubusercontent.com/bbatsov/zenburn-emacs/master/zenburn-theme.el"
  (add-to-list 'custom-theme-load-path "~/.emacs.d/el-get/zenburn-theme")
  (load-theme 'zenburn t))

;; mode bar theme
(el-get-bundle powerline
  (powerline-default-theme))

;; font
(if (and (eq system-type 'darwin)  (window-system)) 
  (progn 
    (set-language-environment 'UTF-8)
	(set-locale-environment "UTF-8")
	(set-default-font "Source Code Pro 14")
    ;; chinese font
	(set-fontset-font t 'unicode (font-spec :name "PingFang SC")))
)

;; support clipboard
(setq x-select-enable-clipboard t)

;; close backup
;; (setq make-backup-files nil)

;; auto fix windows
(global-visual-line-mode 1)

;; view line number
(global-linum-mode 1)

;; auto open latest open file.
(desktop-save-mode 1)
(global-set-key (kbd "C-x g d") 'desktop-change-dir)

;; set babel languages tye
;; usage:
;; #+BEGIN_SRC ditaa :file some_filename.png :cmdline -r -s 0.8
;; #+BEGIN_SRC plantuml :file export-file-name :cmdline -charset UTF-8
(org-babel-do-load-languages
  'org-babel-load-languages
  '(;; other Babel languages
    (ditaa . t)
    (plantuml . t)
    (dot . t)
    ))
(setq org-plantuml-jar-path
	(expand-file-name "~/.emacs.d/scripts/plantuml.jar"))
(setq org-ditaa-jar-path
	(expand-file-name "~/.emacs.d/scripts/ditaa.jar"))
;; don't ask when create image.
(setq org-confirm-babel-evaluate nil)
;; Make babel results blocks lowercase
;; create image C-c C-c 
;; preview C-c C-x C-v
(add-hook 'org-babel-after-execute-hook 'bh/display-inline-images 'append)
(setq org-babel-results-keyword "RESULTS")

(defun bh/display-inline-images ()
	(condition-case nil
      	(org-display-inline-images)
		(error nil)))

;; start server
;; (require 'server)
;; (unless (server-running-p)
;;   (server-start))


;; TODO
;; show time when done
(setq org-log-done 'time)

;; entry to automatically change to DONE when all children are done

(defun org-summary-todo (n-done n-not-done)
   "Switch entry to DONE when all subentries are done, to TODO otherwise."
	(let (org-log-done org-log-states)   ; turn off logging
	(org-todo (if (= n-not-done 0) "DONE" "TODO"))))
(add-hook 'org-after-todo-statistics-hook 'org-summary-todo)

(setq org-capture-templates
  '(("t" "Todo" entry (file+headline "~/org/gtd.org" "Tasks")
		 "* TODO %?\n  %i\n  %a")
	("j" "Journal" entry (file+datetree "~/org/journal.org")
		 "* %?\nEntered on %U\n  %i\n  %a")))

;; 快速启动 agenda-view
(define-key global-map "\C-ca" 'org-agenda)
;;显示他们的内容
(setq org-agenda-files
	(list "~/org/work.org"
	"~/org/study.org"
	"~/org/life.org"
	"~/org/gtd.org"
	"~/org/journal.org"))

(global-set-key (kbd "C-c c") 'org-capture)
;; artist mode
;;

;; git
(el-get-bundle magit)
